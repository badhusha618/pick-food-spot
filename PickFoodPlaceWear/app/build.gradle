plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    namespace 'com.pickfoodplace.wear'
    compileSdk 34

    defaultConfig {
        applicationId 'com.pickfoodplace.wear'
        minSdk 30
        targetSdk 34
        versionCode 1
        versionName '1.0.0'

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        vectorDrawables {
            useSupportLibrary true
        }
        buildConfigField 'boolean', 'USE_MOCK', 'true'
        buildConfigField 'String', 'BASE_URL', '"https://api.example.com/"'
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
        }
    }

    buildFeatures {
        compose true
        buildConfig true
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.5.8'
    }

    packagingOptions {
        resources {
            excludes += ['/META-INF/{AL2.0,LGPL2.1}']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
        freeCompilerArgs += [
                '-Xjvm-default=all',
                '-opt-in=kotlin.RequiresOptIn'
        ]
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.activity:activity-compose:1.8.2'

    // Wear Compose
    implementation "androidx.wear.compose:compose-foundation:${wear_compose_version}"
    implementation "androidx.wear.compose:compose-material:${wear_compose_version}"
    implementation "androidx.wear.compose:compose-navigation:${wear_compose_version}"

    // Navigation
    implementation "androidx.navigation:navigation-compose:${navigation_compose_version}"
    implementation 'androidx.hilt:hilt-navigation-compose:1.1.0'

    // Hilt
    implementation "com.google.dagger:hilt-android:${hilt_version}"
    kapt "com.google.dagger:hilt-android-compiler:${hilt_version}"

    // Retrofit & OkHttp
    implementation "com.squareup.retrofit2:retrofit:${retrofit_version}"
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    implementation "com.squareup.okhttp3:okhttp:${okhttp_version}"
    implementation "com.squareup.okhttp3:logging-interceptor:${okhttp_version}"

    // Room
    implementation "androidx.room:room-runtime:${room_version}"
    implementation "androidx.room:room-ktx:${room_version}"
    kapt "androidx.room:room-compiler:${room_version}"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${coroutines_version}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${coroutines_version}"

    // Security
    implementation 'androidx.security:security-crypto:1.1.0-alpha06'

    // WorkManager
    implementation "androidx.work:work-runtime-ktx:${work_version}"
    implementation 'androidx.hilt:hilt-work:1.1.0'
    kapt 'androidx.hilt:hilt-compiler:1.1.0'

    // ZXing for QR code generation
    implementation 'com.google.zxing:core:3.5.2'

    // Firebase Cloud Messaging (plugin not applied by default)
    implementation 'com.google.firebase:firebase-messaging:23.4.1'

    // Wear OS
    implementation 'androidx.wear:wear:1.3.0'

    // Testing
    testImplementation 'junit:junit:4.13.2'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${coroutines_version}"
    testImplementation 'io.mockk:mockk:1.13.8'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}